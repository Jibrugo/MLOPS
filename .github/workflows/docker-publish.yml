name: Docker

on:
  schedule:
    - cron: '17 21 * * *'
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for service_a
        id: build-and-push-a
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./service_a
          file: ./service_a/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.actor }}/mlops-service_a:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image for service_b
        id: build-and-push-b
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./service_b
          file: ./service_b/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.actor }}/mlops-service_b:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image for service_a
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-service_a:latest
          DIGEST: ${{ steps.build-and-push-a.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Sign the published Docker image for service_b
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-service_b:latest
          DIGEST: ${{ steps.build-and-push-b.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
